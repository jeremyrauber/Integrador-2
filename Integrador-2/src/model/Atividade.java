package model;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;


/**
* Atividade generated by hbm2java
*/
@Entity
@Table(name = "atividade", catalog = "projeto")
public class Atividade implements java.io.Serializable,Comparable<Atividade> {

	private static final long serialVersionUID = 1L;
	private Integer id;
	private String descricao;
	private int nivel;
	private Set<Evento> eventos = new HashSet<Evento>(0);
	private Set<UsuarioAtividade> usuarioAtividades = new HashSet<UsuarioAtividade>(0);

	@Transient 
	private boolean selecionado = false;

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "descricao", nullable = false)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "nivel", nullable = false)
	public int getNivel() {
		return this.nivel;
	}

	public void setNivel(int nivel) {
		this.nivel = nivel;
	}
	
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "evento_has_atividade", catalog = "projeto", joinColumns = {
			@JoinColumn(name = "id_atividade", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "id_evento", nullable = false, updatable = false) })
	public Set<Evento> getEventos() {
		return this.eventos;
	}

	public void setEventos(Set<Evento> eventos) {
		this.eventos = eventos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atividade")
	public Set<UsuarioAtividade> getUsuarioAtividades() {
		return this.usuarioAtividades;
	}

	public void setUsuarioAtividades(Set<UsuarioAtividade> usuarioAtividades) {
		this.usuarioAtividades = usuarioAtividades;
	}

	public boolean isSelecionado() {
		return selecionado;
	}

	public void setSelecionado(boolean selecionado) {
		this.selecionado = selecionado;
	}


	@Override
	public int compareTo(Atividade o) {
		return this.getDescricao().compareTo(o.getDescricao());
	}

	
	
}
